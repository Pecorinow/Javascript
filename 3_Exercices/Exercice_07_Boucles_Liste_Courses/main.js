// Consignes :
// 1) Cr√©er un produit avec d√©j√† qlqes √©l√©ments
// 2) Cr√©er un input et un button pour ajouter des produits √† la liste.
// 3) Cr√©er un nouvel √©l√©ment pour chaque produit de la liste et l'afficher dans un paragraphe, gr√¢ce √† : 
//     - une boucle
//     - un innerHTML
// 4) Si produit d√©j√† pr√©sent, ne pas l'ajouter !
// 5) Mettre une poubelle pour chaque √©l√©ment

const INPUT_ELEM = document.getElementById('newElem');
const BTN_AJOUTER = document.getElementById('ajouter');
const UL_AFFICHAGE = document.getElementById('affichage');
const BTN_SUPPRIMER = document.getElementById('supprimer')

//* 1) Cr√©er un tableau :
let tabCourses = ['Pain', 'Vin', 'Boursin'];

//* 2) Cr√©er une fonction d'affichage qui contient la boucle :
function afficher(){
    UL_AFFICHAGE.innerHTML = '';
    // Cette ligne a 2 r√¥les :
    // 1) Indiquer qu'on va ajouter du HTML √† la liste <ul> de d√©part (on la laisse vide, elle va se remplir √† la ligne suivante).
    // 2) VIDER le contenu HTML pr√©c√©dent et n'ajouter que le HTML qui va √™tre ajout√© au clic du bouton. Sinon, √† chaque nouvel input, c'est chaque fois tout le tableau qui se r√©affiche en dessous du pr√©c√©dent.
    tabCourses.forEach((newElem, i) => {
        // = Pour chaque √©l√©ment(= valeur) contenu dans le tableau et poss√©dant l'index appel√© i...
        UL_AFFICHAGE.innerHTML += `<li>${newElem}   <button onclick="supprimer(${i})" >üóëÔ∏è</button> </li>`;
        // ... on l'affiche comme nouvel √©l√©ment HTML de la liste <ul> (ici l'√©lement HTML est un <li>).
        // attribut onclick = ajoute un event sur le bouton, ici l'event = la fontion supprimer() d√©velopp√©e plus bas.
        // i = permet d'appliquer la fonction supprimer(), dont le "index" est remplac√© par i => La fonction sait qu'elle doit supprimer l'√©l√©ment dont l'index est i !
    });
    

    INPUT_ELEM.value = '';
};

afficher(); // Lancer l'affichage avant les events = afficher le tableau existant d√®s le chargement de la page.

//* 3) Cr√©er une fonction d'ajout pour ajouter le nouvel √©l√©ment √† la liste :

function ajouter() {
    let newElem = INPUT_ELEM.value;
    if(tabCourses.includes(newElem) ) {
        alert('Vous avez d√©j√† rentr√© cet √©l√©ment !');
    } else if (!isNaN(newElem) || newElem == ''){
        alert('√áa n\'a rien √† faire dans une liste de courses, √ßa !')
    } else {
        tabCourses.push(newElem);
    }
};

//* Fonction supprimer :
/**
 * 
 * @param {number} index 
 */
function supprimer(index){
    tabCourses.splice(index, 1);
    afficher();
}
// index = peut √™tre nomm√© n'importe comment, mais comme on est dans un splice, on sait que le premier √©l√©ment entre () est un index, qui sera pr√©cis√© dans la fonction afficher().


//* 4) Ajouter un eventListener au bouton :

BTN_AJOUTER.addEventListener('click', () => {
        ajouter();
        afficher();
});

INPUT_ELEM.addEventListener('keydown', (e) => {
    if(e.key === 'Enter'){
        ajouter();
        afficher();
    }
});



